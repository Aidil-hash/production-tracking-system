// controllers/userController.js

const { users, ROLES } = require('../models/userModel');

// Create a new user
const createUser = (req, res) => {
  const { name, role, password } = req.body;

  // Basic validation
  if (!name || !role || !password) {
    return res.status(400).json({ message: 'Name, Role, and Password are required' });
  }

  // Check if role is valid
  if (!Object.values(ROLES).includes(role)) {
    return res.status(400).json({ message: 'Invalid Role provided' });
  }

  // Simple check for existing user (by name)
  if (users.find(u => u.name === name)) {
    return res.status(400).json({ message: 'User already exists' });
  }

  const newUser = {
    id: users.length + 1, // simplistic ID generation
    name,
    role,
    password, // In production, hash the password!
  };

  users.push(newUser);

  return res.status(201).json({ message: 'User created', user: newUser });
};

// Get all users
const getUsers = (req, res) => {
  const usersWithoutPassword = users.map(({ password, ...rest}) => rest);
  return res.status(200).json(usersWithoutPassword);
};

module.exports = {
  createUser,
  getUsers
};
